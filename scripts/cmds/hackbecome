module.exports = {
  config: {
    name: "hackbecome",
    version: "1.0",
    author: "L'Uchiha Perdu",
    role: 0,
    shortDescription: "Devenir hackeur",
    longDescription: "R√©pondez correctement aux d√©fis pour devenir hackeur et pouvoir utiliser /hack2.",
    category: "√©conomie",
    guide: "{p}hackbecome"
  },

  onStart: async function ({ message, event }) {
    message.reply("ü§ñ **Test pour devenir hackeur :**\n\n" +
      "1Ô∏è‚É£ **Factorisation** : Trouvez les facteurs premiers de **91**.\n" +
      "2Ô∏è‚É£ **Question informatique** : Quel protocole est utilis√© pour s√©curiser les sites web (HTTP ou HTTPS) ?\n\n" +
      "üí¨ R√©pondez avec : `/hackbecome R√©ponse1 R√©ponse2`"
    );
  },

  onReply: async function ({ args, message, event }) {
    if (args.length < 2) return message.reply("‚ùå R√©pondez avec `/hackbecome R√©ponse1 R√©ponse2`");

    const answer1 = args[0];
    const answer2 = args[1].toLowerCase();

    if (answer1 !== "7,13" || answer2 !== "https") {
      return message.reply("‚ùå Mauvaise r√©ponse ! Essayez encore.");
    }

    let hackers = {};
    if (fs.existsSync("hackers.json")) {
      hackers = JSON.parse(fs.readFileSync("hackers.json"));
    }

    hackers[event.senderID] = true;
    fs.writeFileSync("hackers.json", JSON.stringify(hackers, null, 2));

    return message.reply("‚úÖ **F√©licitations !** Vous √™tes maintenant un hackeur. Utilisez `/hack2 [UID]` pour pirater.");
  }
};